let express,join,createWriteStream,morgan,session,compression,home,admin,api,order,payment,connectToDb;_5e6‍.w("express",[["default",["express"],function(v){express=v}]]);_5e6‍.w("path",[["join",["join"],function(v){join=v}]]);_5e6‍.w("fs",[["createWriteStream",["createWriteStream"],function(v){createWriteStream=v}]]);_5e6‍.w("morgan",[["default",["morgan"],function(v){morgan=v}]]);_5e6‍.w("express-session",[["default",["session"],function(v){session=v}]]);_5e6‍.w("compression",[["default",["compression"],function(v){compression=v}]]);_5e6‍.w("./routes/home",[["default",["home"],function(v){home=v}]]);_5e6‍.w("./routes/admin",[["default",["admin"],function(v){admin=v}]]);_5e6‍.w("./routes/api",[["default",["api"],function(v){api=v}]]);_5e6‍.w("./routes/api/orderRoute",[["default",["order"],function(v){order=v}]]);_5e6‍.w("./routes/api/paymentRoute",[["default",["payment"],function(v){payment=v}]]);_5e6‍.w("./db",[["default",["connectToDb"],function(v){connectToDb=v}]]);












const app = express();
const logFile = join(__dirname, "bakeshop.log");

app.use(compression());
app.use("/assets", express.static(join(__dirname, "public")));
app.use(express.static(join(__dirname, "public", "client")));
app.use(express.urlencoded({ extended: false }));
app.use(express.json());
const dotenv = require ('dotenv').config ();
app.use(
  "/admin",
  session({
    name: "sessId",
    secret: process.env.sessionSecret,
    resave: false,
    saveUninitialized: true,
    cookie: {
      secure: app.get("env") === "production" ? true : false,
      httpOnly: true,
      maxAge: 18000000, // 5 hours
    },
  })
);
app.use(morgan(":method - :url - :date - :response-time ms"));
app.use(
  morgan(":method - :url - :date - :response-time ms", {
    stream: createWriteStream(logFile, { flags: "a" }),
  })
);

app.set("view engine", "pug");
app.use("/api/payment", payment);
app.use("/api/orders", order);
app.use("/admin", admin);
app.use("/api", api);
app.use("/", home);

Promise.all([connectToDb()])
  .then(() =>
    app.listen(3000, () => console.log("Bake Shop is cooking on port 3000"))
  )
  .catch((error) => {
    console.error(`MongoDB Atlas Error: ${error}`);
    process.exit();
  });
